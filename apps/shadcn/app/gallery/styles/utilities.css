@utility text-color {
    color: var(--text-color);
}

@utility text-fill {
    -webkit-text-fill-color: var(--text-color);
    color: var(--text-color);
}

@utility text-stroke {
    -webkit-text-stroke-color: var(--stroke-color);
    -webkit-text-stroke-width: var(--stroke-width);
}

@utility text-background {
    --text-color: transparent;
    background-color: var(--fill-color);
}

@utility text-clip {
    -webkit-background-clip: text;
    background-clip: text;
}

@utility text-gradient {
    --text-color: transparent;
    background-image: var(--text-image);
    background-size: 100% 100%;
}

@utility text-image {
    --text-color: transparent;
    background-image: var(--text-image);
    background-repeat: no-repeat;
    background-position: center center;
    background-size: 100% 100%;
}

@utility stroke-gradient {
    background-image: var(--text-image);
    background-size: 100% 100%;
}

@utility stroke-image {
    background-image: var(--text-image);
    background-repeat: no-repeat;
    background-position: center center;
    background-size: 100% 100%;
}

@utility text-fill-shadow {
    -webkit-text-fill-color: var(--text-color);
    color: var(--stroke-color);
}

@utility text-shadow {
    text-shadow: var(--text-shadow);
}

@utility filter-shadow {
    filter: drop-shadow(var(--text-shadow));
}

/*
// https://github.com/hudochenkov/sass-text-stroke
// https://codepen.io/hudochenkov/pen/RPKBoO?editors=1100
// https://codepen.io/hudochenkov/pen/yNgqVg?editors=110
@function text-stroke($size: 2, $color: #fff, $correction: 0) {
    $size-rounded: round($size);
    $size-rest:    $size-rounded - $size;

  $radius: $size - $correction;
  $stroke: ();

  @for $i from -$size-rounded through $size-rounded {
      $i: $i + $size-rest;

    @for $k from -$size-rounded through $size-rounded {
        $k: $k + $size-rest;

      $x: $k;
      $y: $i;

      @if $k > 0 {
        $x: $k - 0.5;
      } @else if $k < 0 {
        $x: $k + 0.5;
      }

      @if $i > 0 {
        $y: $i - 0.5;
      } @else if $i < 0 {
        $y: $i + 0.5;
      }

      @if ($x*$x + $y*$y <= $radius*$radius) {
        $stroke: append($stroke, $i*0.005em $k*0.005em 0 $color, comma);
      }
    }
  }

  @return $stroke;
}

@mixin text-stroke-shadow($size: 2, $color: currentColor, $correction: 0) {
  text-shadow: text-stroke($size, $color, $correction);
}

// @mixin stroke($color: #000, $size: 1px) {
//   text-shadow:
//     -#{$size} -#{$size} 0 $color,
//      0        -#{$size} 0 $color,
//      #{$size} -#{$size} 0 $color,
//      #{$size}  0        0 $color,
//      #{$size}  #{$size} 0 $color,
//      0         #{$size} 0 $color,
//     -#{$size}  #{$size} 0 $color,
//     -#{$size}  0        0 $color;
// }

*/

.bg-photo {
  background:
    radial-gradient(farthest-corner, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.8)),
    url('https://picsum.photos/1280/800') center/cover;
}

.bg-sweet   { background: var(--gradient-sweet); }
.bg-dark    { background: #151515; }
.bg-waves   { background: var(--image-waves) center/cover; }
.bg-waves1  { background: radial-gradient(farthest-corner, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.8)); }
.bg-waves2  { background: var(--image-waves2) center/cover; }
.bg-waves3  { background: var(--image-waves3) center/cover; }
.bg-radial  { background: radial-gradient(#272727, #1b1b1b); }
.bg-radial2 { background: radial-gradient(#f40e0e, #a61919); }
.bg-radial3 { background: radial-gradient(#f0db99, rgb(209, 163, 77)); }
.bg-ambient { background: linear-gradient(to right, #24243e, #141E30, #0f0c29); }

[class*="bg-image-"] {
  background-position: center center;
  background-size: cover;
}

/* Animations for text effects */
@keyframes light {
  0%, 100% {
    background-position: 0 0, 0 0;
  }
  50% {
    background-position: 100% 0, 100% 0;
  }
}

/*
// svg { animation: shake 1s linear; }

// @keyframes shake {
//   0% { transform: translate(3px,5px); }
//   5% { transform: translate(8px,-5px); }
//   10% { transform: translate(-3px,2px); }
//   20% { transform: translate(0px,-5px); }
//   25% { transform: translate(2px,-5px); }
//   30% { transform: translate(-3px,-3px); }
//   30% { transform: translate(0px,0px); }
//   40% { transform: translate(2px,2px); }
//   55% { transform: translate(6px,-5px); }
//   68% { transform: translate(4px,-3px); }
//   80% { transform: translate(-4px,2px); }
//   85% { transform: translate(2px,-5px); }
//   90% { transform: translate(-8px,5px); }
//   100% { transform: translate(7px,6px); }
// }
*/
